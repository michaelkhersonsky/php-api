  - name: Deploy PHP API with Apache Proxy
    hosts: webserver
    become: true
    tasks:
      - name: Gather Ansible facts
        setup:

      - name: Set hostname
        hostname:
          name: webserver.local

      - name: Set high ulimits values
        pam_limits:
          domain: '*'
          limit_type: hard
          limit_item: nofile
          value: 65535

      - name: Set soft ulimits values
        pam_limits:
          domain: '*'
          limit_type: soft
          limit_item: nofile
          value: 65535

      - name: Tune sysctl settings for high traffic
        sysctl:
          name: "{{ item.key }}"
          value: "{{ item.value }}"
          sysctl_set: yes
          state: present
          reload: yes
        with_items:
          - { key: "net.core.somaxconn", value: "65535" }
          - { key: "net.ipv4.tcp_max_syn_backlog", value: "65535" }
          - { key: "net.ipv4.tcp_fin_timeout", value: "15" }
          - { key: "net.ipv4.tcp_tw_reuse", value: "1" }
          - { key: "net.ipv4.tcp_tw_recycle", value: "1" }
          - { key: "net.ipv4.tcp_syncookies", value: "1" }

      - name: Install CloudWatch monitoring tool
        apt:
          name: amazon-cloudwatch-agent
          state: present
          update_cache: yes

      - name: Configure CloudWatch Agent
        copy:
          dest: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
          content: |
            {
              "logs": {
                "logs_collected": {
                  "files": {
                    "collect_list": [
                      {
                        "file_path": "/var/log/apache2/access.log",
                        "log_group_name": "apache-logs",
                        "log_stream_name": "access-log"
                      },
                      {
                        "file_path": "/var/log/apache2/error.log",
                        "log_group_name": "apache-logs",
                        "log_stream_name": "error-log"
                      }
                    ]
                  }
                }
              }
            }

      - name: Start CloudWatch Agent
        service:
          name: amazon-cloudwatch-agent
          state: started
          enabled: yes

      - name: Install and configure firewall
        apt:
          name: ufw
          state: present

      - name: Allow only port 16788
        ufw:
          rule: allow
          port: 16788
          proto: tcp

      - name: Enable UFW
        ufw:
          state: enabled

      - name: Install Apache and PHP
        apt:
          name:
            - apache2
            - php
            - libapache2-mod-php
          state: present
          update_cache: yes

      - name: Ensure Apache modules are enabled
        command: a2enmod proxy proxy_http

      - name: Change Apache listening port
        lineinfile:
          path: /etc/apache2/ports.conf
          regexp: '^Listen '
          line: 'Listen 16788'

      - name: Enable PHP OpCache
        lineinfile:
          path: /etc/php/{{ php_version }}/apache2/php.ini
          line: "{{ item }}"
          create: yes
        with_items:
          - "opcache.enable=1"
          - "opcache.memory_consumption=128"
          - "opcache.max_accelerated_files=4000"
          - "opcache.revalidate_freq=2"

      - name: Deploy PHP API
        copy:
          dest: /var/www/html/index.php
          content: |
            <?php
            if ($_SERVER['REQUEST_METHOD'] === 'POST') {
                $input = file_get_contents('php://input');
                parse_str($input, $data);
                if (!empty($data['words'])) {
                    $words = explode(',', $data['words']);
                    sort($words);
                    echo json_encode($words);
                }
            } else {
                echo '<form method="POST" onsubmit="fetchSorted(event)">
                        <input type="text" id="wordInput" name="words" placeholder="Enter comma-separated words">
                        <button type="submit">Sort</button>
                      </form>
                      <div id="output"></div>
                      <script>
                        function fetchSorted(event) {
                            event.preventDefault();
                            let words = document.getElementById("wordInput").value;
                            fetch("", {method: "POST", body: "words=" + words, headers: {'Content-Type': 'application/x-www-form-urlencoded'}})
                                .then(response => response.json())
                                .then(data => document.getElementById("output").innerText = data.join(", "));
                        }
                      </script>';
            }
            ?>

      - name: Configure Apache Proxy
        copy:
          dest: /etc/apache2/sites-available/000-default.conf
          content: |
            <VirtualHost *:16788>
                ServerAdmin webmaster@localhost
                DocumentRoot /var/www/html
                ProxyPass /api http://127.0.0.1/index.php
                ProxyPassReverse /api http://127.0.0.1/index.php
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/access.log combined
            </VirtualHost>

      - name: Restart Apache
        service:
          name: apache2
          state: restarted
